---
- name: Hurling boulders... # noqa: var-naming[non-string]
  hosts: all
  gather_facts: false

  # Using env var to set how many hosts to run in parallel, this way it's easier to control
  serial: "{{ lookup('env', 'ANSIBLE_SERIAL') if lookup('env', 'ANSIBLE_SERIAL') | length > 0 else '100%' }}"

  pre_tasks:
    # - ansible.builtin.debug: msg="{{  }}" # Uncomment to debug variables

  module_defaults:
    # Module defaults for https://docs.ansible.com/ansible/latest/collections/community/vmware/index.html#modules
    group/vmware: "{{ vmware_defaults | default(omit) }}"

    # Module defaults for https://docs.ansible.com/ansible/latest/collections/vmware/vmware/index.html
    group/vmware.vmware.vmware: "{{ vmware_defaults | default(omit) }}"

    # Module defaults for https://docs.ansible.com/ansible/latest/collections/vmware/vmware_rest/index.html#plugins-in-vmware-vmware-rest
    group/vmware.vmware_rest.vmware_rest: "{{ vmware_rest_defaults | default(omit) }}"

    # Module defaults for:
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/index.html#modules
    # https://docs.ansible.com/ansible/latest/collections/community/aws/index.html#modules
    group/aws: "{{ aws_defaults | default(omit) }}"

    # Module defaults for:
    # https://docs.ansible.com/ansible/latest/collections/azure/azcollection/index.html#plugins-in-azure-azcollection
    # Refer to link below for different naming reason
    # https://github.com/ansible-collections/azure/issues/977
    group/azure.azcollection.all: "{{ azure_defaults | default(omit) }}"

    # Module defaults for:
    # community.general.proxmox* modules
    # https://docs.ansible.com/ansible/latest/collections/community/general/index.html
    group/community.general.proxmox: "{{ proxmox_defaults | default(omit) }}"
    group/community.proxmox.proxmox: "{{ proxmox_defaults | default(omit) }}"

  roles:
    - role: nova.core.deploy_vars # Including deployment variables

    # Add -e pre_vm=role_name to the deploy command to run the role and stop the play, the role must be able to run on localhost
    - role: nova.core.customization_pre_role
      when: pre_role is defined

    # Saving account's passwords to Vault
    - role: nova.core.secrets_to_vault
      when:
        - save_secrets_to_vault # Requires a running HashiCorp Vault server with LDAP auth enabled
        - not role_only # Only deploys configuration under roles/vm/role_name and stops
        - not role_only_wp # wp means with pre/post_vm_role
        - not deploy_mode == 'undeploy' # No need to save secrets when undeploying

    - role: nova.core.machine_operations # Creating a VM

    - role: nova.core.configure_networking # Configuring VM networking

    - role: nova.core.connection # Setting correct network connection parameters

    # Add -e single_role=role_name to the deploy command run the role and stop the play, useful for testing/development of a single role
    - role: nova.core.customization_single_role
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when: single_role is defined

    - role: nova.core.accounts # Creating required accounts
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when:
        - not role_only # Only deploys configuration under roles/vm/role_name and stops
        - not role_only_wp # wp means with pre/post_vm_role

    - role: nova.core.template_os_configuration # Used for configuring project or env specific templates
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when: template

    - role: nova.core.os_configuration # Running OS specific configurations
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when:
        - not role_only # Only deploys configuration under roles/vm/role_name and stops
        - not role_only_wp # wp means with pre/post_vm_role

    - role: nova.core.customization_pre_vm_role # Including pre_customization role if it exists
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when:
        - not role_only

    - role: nova.core.customization # Including machine specific role if exists
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"

    - role: nova.core.customization_post_vm_role # Including post_customization specific role if exists
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"
      when:
        - not role_only

    - role: nova.core.finalize # Running final & cleanup tasks
      become: "{{ default_ansible_become | default(omit) }}"
      become_user: "{{ default_ansible_become_user | default(omit) }}"

    - role: nova.core.get_ip
