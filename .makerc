# Different variable action are done here so they'd be easier to use later
ROOT_DIR :=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))

# Project logo in ASCII
LOGO :=ICBfX19fXyAgICAgICBfX19fX19fICAgICAgIF9fX19fICBfICAgIF8gXyAgIF9fX19fX18KIC8gX19fX3wgICAvXHxfXyAgIF9ffC9cICAgfCAgX18gXHwgfCAgfCB8IHwgfF9fICAgX198CnwgfCAgICAgICAvICBcICB8IHwgIC8gIFwgIHwgfF9fKSB8IHwgIHwgfCB8ICAgIHwgfAp8IHwgICAgICAvIC9cIFwgfCB8IC8gL1wgXCB8ICBfX18vfCB8ICB8IHwgfCAgICB8IHwKfCB8X19fXyAvIF9fX18gXHwgfC8gX19fXyBcfCB8ICAgIHwgfF9ffCB8IHxfX19ffCB8CiBcX19fX18vXy8gICAgXF9cXy9fLyAgICBcX1xffCAgICAgXF9fX18vfF9fX19fX3xffAoKICAgICAgUG93ZXJlZCBieTogQ2xhcmlmaWVkIFNlY3VyaXR5CiAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9DbGFyaWZpZWRTZWN1cml0eS9jYXRhcHVsdAoK

ifeq (${MAKEVAR_CATAPULT_VERSION}, staging)
    IMAGE_TAG :=staging
else
    IMAGE_TAG :=$(shell cat version.yml | cut -d ' ' -f 2)
endif

MAKEVAR_HOST_OS :=$(shell uname)
CONTAINER_PROJECT_NAME :=$(shell echo $(MAKEVAR_COMPOSE_PROJECT_NAME) | tr '[:upper:]' '[:lower:]')
CONTAINER_USER_ID :=$(or ${CONTAINER_USER_ID},$(shell id -u) )

ifeq (${CONTAINER_USER_ID}, 1000)
    IMAGE_FULL :=${MAKEVAR_CONTAINER_REGISTRY}/${MAKEVAR_IMAGE_NAME}:${IMAGE_TAG}
else ifeq (${MAKEVAR_HOST_OS}, Darwin)
    IMAGE_FULL :=${MAKEVAR_CONTAINER_REGISTRY}/${MAKEVAR_IMAGE_NAME}:${IMAGE_TAG}
else
    IMAGE_FULL :=locally-built-catapult:${IMAGE_TAG}
endif

# Because default MacOS user group ID alredy exists in container
ifeq (${MAKEVAR_HOST_OS}, Darwin)
    CONTAINER_GROUP_ID :=$(or ${CONTAINER_GROUP_ID},$(shell id -u) )
else
    CONTAINER_GROUP_ID :=$(or ${CONTAINER_GROUP_ID},$(shell id -g) )
endif

CONTAINER_USER_NAME :=$(or ${CONTAINER_USER_NAME},${USER} )
CONTAINER_GROUP_NAME :=$(or ${CONTAINER_GROUP_NAME},${USER} )
CONTAINER_ENTRYPOINT :=zsh
CONTAINER_NAME :=${CONTAINER_PROJECT_NAME}-${CONTAINER_USER_NAME}
# Default for MacOS that doesn't have a DISPLAY env var
DISPLAY :=$(or ${DISPLAY},0.0 )

# Default for MacOS that doesn't have a XDG_SESSION_TYPE env var
XDG_SESSION_TYPE :=$(or ${XDG_SESSION_TYPE},wayland )

BUILD_ARGS := --build-arg CONTAINER_USER_ID=${CONTAINER_USER_ID} --build-arg CONTAINER_GROUP_ID=${CONTAINER_GROUP_ID} --build-arg TZ=${MAKEVAR_TZ}

# Random generated secret key for ARA
# It will be used as username and password for database connection
MAKEVAR_ARA_SECRET_KEY :=$(shell openssl rand -hex 12)
MAKEVAR_ARA_DATABASE_USERNAME :=${MAKEVAR_ARA_SECRET_KEY}
MAKEVAR_ARA_DATABASE_PASSWORD :=${MAKEVAR_ARA_SECRET_KEY}

ARA_RECORD_CONTROLLER_NAME :=$(or ${MAKEVAR_ARA_RECORD_CONTROLLER_NAME},${CONTAINER_NAME})
ARA_RECORD_USER_NAME :=$(or ${MAKEVAR_ARA_RECORD_USER_NAME},${CONTAINER_USER_NAME})

# Setting the bind addresses based on whether to listen on localhost only or all interfaces
ifeq (${MAKEVAR_ARA_LOCALHOST_ONLY}, 1)
    MAKEVAR_ARA_BIND_COMMAND =--bind [127.0.0.1]:8000 --bind [::1]:8000
else
    MAKEVAR_ARA_BIND_COMMAND =--bind [::]:8000
endif
